{"componentChunkName":"component---src-templates-blog-post-js","path":"/typescript/first/","result":{"data":{"site":{"siteMetadata":{"title":"Southky.io","author":"KimNamkyu","siteUrl":"https://kimnamkyu.github.io","comment":{"disqusShortName":"","utterances":""},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"96bf54c6-2f8c-536e-8f14-78d6e6637950","excerpt":"타입스크립트란? 자바스크립트에 타입을 부여한 언어. 확장된 언어.\n타입스크립트는 브라우저에서 실행하기 위해 컴파일이 필요하다. 타입스크립트를 쓰면 좋은점 에러의 사전 방지 코드 가이드 및 자동완성 타입스크립트 설정 파일 셋팅 ts파일을 js파일로 컴파일 해주어야함. tsc index.ts 타입스크립트를 자바스크립트로 컴파일 해준다. tsconfig.json 파일 생성하여 컴파일 조건 셋팅 타입스크립트 변수 타입 다음과 같이 12가지 변수 타입 Boolean, Number, String…","html":"<h2 id=\"타입스크립트란\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%9E%80\" aria-label=\"타입스크립트란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트란?</h2>\n<p>자바스크립트에 타입을 부여한 언어. 확장된 언어.\n타입스크립트는 브라우저에서 실행하기 위해 컴파일이 필요하다.</p>\n<hr>\n<h2 id=\"타입스크립트를-쓰면-좋은점\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%A5%BC-%EC%93%B0%EB%A9%B4-%EC%A2%8B%EC%9D%80%EC%A0%90\" aria-label=\"타입스크립트를 쓰면 좋은점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트를 쓰면 좋은점</h2>\n<ul>\n<li>에러의 사전 방지</li>\n<li>코드 가이드 및 자동완성</li>\n</ul>\n<h2 id=\"타입스크립트-설정-파일-셋팅\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-%EC%85%8B%ED%8C%85\" aria-label=\"타입스크립트 설정 파일 셋팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 설정 파일 셋팅</h2>\n<ul>\n<li>ts파일을 js파일로 컴파일 해주어야함.</li>\n<li>tsc index.ts 타입스크립트를 자바스크립트로 컴파일 해준다.</li>\n<li>\n<p>tsconfig.json 파일 생성하여 컴파일 조건 셋팅</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"allowJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">// 프로젝트 안에 자바스크립트 허용</span>\n    <span class=\"token string\">\"checkJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>        <span class=\"token comment\">// @ts-check</span>\n    <span class=\"token string\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>  <span class=\"token comment\">//모든 타입에 대해서 기본적인 타입 셋팅</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"타입스크립트-변수-타입\" style=\"position:relative;\"><a href=\"#%ED%83%80%EC%9E%85%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EB%B3%80%EC%88%98-%ED%83%80%EC%9E%85\" aria-label=\"타입스크립트 변수 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>타입스크립트 변수 타입</h2>\n<p>다음과 같이 12가지 변수 타입</p>\n<ul>\n<li>Boolean, Number, String, Object, Array, Tuple, Enum, Any, Void, Null, Undefined, Never</li>\n<li>\n<p>기본 타입</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// TS 문자열 선언</span>\n<span class=\"token keyword\">let</span> str<span class=\"token operator\">:</span> string <span class=\"token operator\">=</span> <span class=\"token string\">'hello'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TS 숫자</span>\n<span class=\"token keyword\">let</span> num<span class=\"token operator\">:</span> number <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TS 배열</span>\n<span class=\"token keyword\">let</span> arr<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>number<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> arr2<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>string<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'kakao'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'naver'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TS 배열 리터럴 방식</span>\n<span class=\"token keyword\">let</span> items<span class=\"token operator\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//TS 튜플 - 배열의 특정 인덱스에 타입 정의</span>\n<span class=\"token keyword\">let</span> address<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>string<span class=\"token punctuation\">,</span> number<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'gangnam'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// TS 객체</span>\n<span class=\"token keyword\">let</span> obj<span class=\"token operator\">:</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// let person: object = {</span>\n<span class=\"token comment\">//     name: 'capt',</span>\n<span class=\"token comment\">//     age: 100</span>\n<span class=\"token comment\">// };</span>\n<span class=\"token comment\">//객체내 프로퍼티 타입 정의</span>\n<span class=\"token keyword\">let</span> person<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> number<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'thor'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">1000</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// TS 진위값</span>\n<span class=\"token keyword\">let</span> show<span class=\"token operator\">:</span> boolean <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>함수타입</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 함수의 파라미터에 타입을 정의하는 방식</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">sum</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token operator\">:</span> number<span class=\"token punctuation\">,</span> b<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">+</span> b<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//함수의 반환 값에 타입을 정의하는 방식</span>\n<span class=\"token keyword\">let</span> add <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token parameter\">number</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 함수의 (선택적)옵셔널 파라미터</span>\n<span class=\"token keyword\">let</span> <span class=\"token function-variable function\">log</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> b<span class=\"token operator\">?</span><span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello ts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abc'</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>","frontmatter":{"title":"Typescript 기초","date":"May 25, 2021"}}},"pageContext":{"slug":"/typescript/first/","previous":{"fields":{"slug":"/webpack/lesson1/"},"frontmatter":{"title":"프론트엔드 개발환경의 이해: 웹팩(기본)"}},"next":{"fields":{"slug":"/next/first/"},"frontmatter":{"title":"next"}}}},"staticQueryHashes":["2486386679","3128451518"]}